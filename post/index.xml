<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on A Traveller in Space and Time</title>
    <link>http://traveller42.github.io/post/</link>
    <description>Recent content in Posts on A Traveller in Space and Time</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 05 Apr 2016 23:57:24 -0400</lastBuildDate>
    <atom:link href="http://traveller42.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Measure Twice</title>
      <link>http://traveller42.github.io/post/measure-twice/</link>
      <pubDate>Tue, 05 Apr 2016 23:57:24 -0400</pubDate>
      
      <guid>http://traveller42.github.io/post/measure-twice/</guid>
      <description>

&lt;h2 id=&#34;measure-twice-cut-order-once:d8b76d1b66f429937aec64249c3d9e10&#34;&gt;Measure Twice; &lt;del&gt;Cut&lt;/del&gt; Order Once&lt;/h2&gt;

&lt;p&gt;While assembling my portable supercomputer, I discovered that the cables I
had ordered were too short.  I had neglected to allow for the strain-reliefs
at each end and the need to not stress the sockets these cables are plugged
into.  I should have used the longer cables I have to determine the length I
needed before ordering all the cables for the project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bad Ideas</title>
      <link>http://traveller42.github.io/post/bad-ideas/</link>
      <pubDate>Mon, 04 Apr 2016 23:59:59 -0400</pubDate>
      
      <guid>http://traveller42.github.io/post/bad-ideas/</guid>
      <description>

&lt;h2 id=&#34;bad-ideas:aec35b56d95e3a3d35159fa91aa48dfb&#34;&gt;Bad Ideas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Trying to launch a two-years dormant VM on a current version of
VirtualBox on a 7 year old computer that is definitely showing
its age.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was prompted by a change in policy by Code 42 Software, the
owners of CrashPlan, a very good backup program and service.
The new policy is to delete cloud repositories for computers that
have not connected in over 6 months.  This is only an issue as I
have a couple of Windows VMs that I keep for the rare times I need
a Windows environment.  Each of these VMs has not been active in
two years as I have had no need to run a program on Windows in that
time.&lt;/p&gt;

&lt;p&gt;Unfortunately, there are a couple resources that I would like to
maintain that require Windows.  Therefore, I decided to launch one
of the VMs and update the CrashPlan software and let it refresh the
repository.  It has now been trying to launch the VM for almost an
hour.  It has also effectively locked up the GUI for the old computer.&lt;/p&gt;

&lt;p&gt;This is being composed on my Chromebook where I have duplicated the
git repo for the site.  I should document the steps needed as someone
may want to do it again some day.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to leave the poor system trying to run the VM.  Hopefully, I
can either log into a shell, or get control back on the GUI enough to
shutdown the VM.  I do have a good backup, so I could just move the
data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Root</title>
      <link>http://traveller42.github.io/post/hugo-root/</link>
      <pubDate>Sun, 03 Apr 2016 23:40:35 -0400</pubDate>
      
      <guid>http://traveller42.github.io/post/hugo-root/</guid>
      <description>&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; Hugo doesn&amp;rsquo;t do anything with a file that it hasn&amp;rsquo;t been told how to handle.&lt;/p&gt;

&lt;p&gt;I host the source for this blog in a &lt;a href=&#34;https://github.com/traveller42/traveller42.github.io&#34;&gt;Github repository&lt;/a&gt;.  Github will place a
notice suggesting a Readme if one doesn&amp;rsquo;t exist.  In general, this is a good idea.&lt;br /&gt;
It let&amp;rsquo;s the developer describe what the code hosted in the repository is intended
to do or support.  It can be used as initial documentation for a small project and
a jumping-off point for a larger project.&lt;/p&gt;

&lt;p&gt;I have now added such a file to the source branch of my blog repository.  The real
reason for this is to test what will happen with files created in the source root.
My next task is to create a deploy script.  Now, I know I can just leave it in the
source root.  This helps to keep things simple.&lt;/p&gt;

&lt;p&gt;This script won&amp;rsquo;t do much.  It is only a few steps and I have been doing them from
memory since the first build.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It Takes Three</title>
      <link>http://traveller42.github.io/post/tcp/</link>
      <pubDate>Sat, 02 Apr 2016 23:10:04 -0400</pubDate>
      
      <guid>http://traveller42.github.io/post/tcp/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve always heard that the best way to really understand something is to explain
it to someone else.  Today, I learned a related truth:  &lt;em&gt;Trying&lt;/em&gt; to explain something
to another is a good way to find out what you &lt;em&gt;do not&lt;/em&gt; know.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been dealing with data communications for pretty much my entire professional
career.  I understand how a signal travels along a wire, and have used this to find
where that wire is broken.  I have tapped serial lines for gather data in parallel
with the primary system.  I once was able to get an ancient mainframe and a PC to
communicate when much more experienced consultants had declared it wasn&amp;rsquo;t possible.
I&amp;rsquo;ve deployed, monitored, analyzed IP networks.  I&amp;rsquo;ve written programs that operated
at all levels of the stack.  If asked, I would have said I had a firm grasp of the
low-level operation of the Transmission Control Protocol (TCP).&lt;/p&gt;

&lt;p&gt;Today was the first time I had tried to explain the initiation of a TCP connection.
I knew it used a three-way handshake.  I could recognized the handshake when looking
at a packet trace.  I just never thought about it.  I knew it could break.  I knew the
effects of a break, deliberate or otherwise.  I&amp;rsquo;ve always had this part handled by
a library call, so I never had to implement it myself.  It just worked, or it didn&amp;rsquo;t.
I could handle either case in my code.  I never had to work with the steps in
isolation.&lt;/p&gt;

&lt;p&gt;I was asked about the details of the initiation of a TCP connection by another
computer programmer with experience with using networks, but not with network programming.
I got several things wrong and created much confusion before actually getting the
gist of the process explained and the knowledge successfully imparted.&lt;/p&gt;

&lt;p&gt;Since I was reviewing packet traces today, I had plenty of opportunity to look at
the process as implemented.&lt;/p&gt;

&lt;p&gt;[If you truly have a solid understanding of the three-way handshake, you can stop
reading now.]&lt;/p&gt;

&lt;p&gt;The TCP Three-way handshake
1. SYN from client
2. SYN-ACK from Server
3. ACK from client&lt;/p&gt;

&lt;p&gt;The SYN flag is set to indicate that the packet includes the starting sequence number
from the client.  The SYN-ACK acknowledges the receipt of the previous packet and
includes the starting sequence number from the server.  The client then sends an ACK to
indicate that it has received the packet.  From this point on, all packets between
the client and the server should have the ACK flag set.&lt;/p&gt;

&lt;p&gt;The Wikipedia &lt;a href=&#34;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34;&gt;page on TCP&lt;/a&gt;
, as usual, has more detail than most of us will ever need on TCP and the details of
the three-way handshake to start the connection and the &lt;strong&gt;four-way&lt;/strong&gt; handshake for tearing
down the connection.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Start of a New Blog</title>
      <link>http://traveller42.github.io/post/start/</link>
      <pubDate>Fri, 01 Apr 2016 23:04:47 -0400</pubDate>
      
      <guid>http://traveller42.github.io/post/start/</guid>
      <description>

&lt;h1 id=&#34;building-a-portable-supercomputer:e35225681628e09bab23f7b8fd7299b1&#34;&gt;Building a Portable Supercomputer&lt;/h1&gt;

&lt;p&gt;While I am starting on April 1, this is actually something I am working on.&lt;/p&gt;

&lt;h1 id=&#34;hugo:e35225681628e09bab23f7b8fd7299b1&#34;&gt;Hugo&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;m using &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; to generate these pages.  This is actually
the second site I&amp;rsquo;ve created using Hugo.  The first is a &lt;a href=&#34;http://traveller42.github.io/ogs-notifier/&#34;&gt;site&lt;/a&gt; for a Chrome
Extension I support.&lt;/p&gt;

&lt;p&gt;Once everything is in place, this is quick and easy to maintain.  However, there
are many fiddly bits that need to accounted for before it all works as desired.&lt;/p&gt;

&lt;h1 id=&#34;github:e35225681628e09bab23f7b8fd7299b1&#34;&gt;Github&lt;/h1&gt;

&lt;p&gt;Since this site and the source used to create it are hosted on Github, part of
getting everything working involved arranging and populating the proper repository
in the correct manner.  I&amp;rsquo;ve got this working manually for now, but my next task
will be to create a script to automate the deployment of the new pages.  Once that
is stable, I intend to leverage a Continuous Integration tool to automagically
generate and deploy the new pages when I push new source to the repository.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>